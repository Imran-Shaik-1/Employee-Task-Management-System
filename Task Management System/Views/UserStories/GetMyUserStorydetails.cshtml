@model DBOperations.Models.UserStories_Model

@{
    ViewBag.Title = "GetMyUserStorydetails";
}

<h2>View UserStory</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserStoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserStoryID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form2">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "custom-textarea", @readonly = "readonly" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.list), "Select Status", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoryPoints, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoryPoints, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

</div>
}

    @if (ViewBag.TasksCount > 0)
    {
        <p>There are @Html.ActionLink($"{ViewBag.TasksCount} Tasks", "GetTasks", "Task", new { userstoryid = Model.UserStoryID }, new { @class = "view-tasks" }) attached to this UserStory.</p>
    }
    else
    {
        <h4>There are no tasks attached to this UserStory</h4>
    }
    <div class="action-links">

        @Html.ActionLink("Create a new Task", "AddTask", "Task", new { userstoryid = Model.UserStoryID }, new { @class = "create-task" })<br /><br />

        @Html.ActionLink("Back", "GetMyUserStories", "UserStories", new { Emp_id = Model.AssignedManagerID }, new { @class = "view-tasks" })

    </div>
</div>